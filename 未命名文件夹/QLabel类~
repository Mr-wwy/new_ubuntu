

QLabel类

	label_camera1=new QLabel(this);																	
    label_camera1->setObjectName("label_camera1");							名字
    label_camera1->setScaledContents(true);									设置图片自适应窗口大小
    label_camera1->setGeometry(0,0,50,25);									从屏幕上（0，0）位置开始（即为最左上角的点），显示一个50*25的界面（宽50，高25）
    label_camera1->setContextMenuPolicy(Qt::CustomContextMenu);				设置右键菜单 （CustomContextMenu  自定义菜单）
    label_camera1->setPixmap(QPixmap(":/picture/black.jpg"));				设置控件图片
    label_camera1->setFrameShape(QLabel::Box);								设置控件边框
    label_camera1->setStyleSheet("border-width: 1px;border-style: solid;border-color: rgb(133, 133, 133);");
    
	Qt中设置按钮或QWidget的外观是，可以使用QT Style Sheets来进行设置，非常方便。
	可以用setStyleSheet("font: bold; font-size:20px; color: rgb(241, 70, 62); background-color: green");来进行设置，其他的样式介绍如下：
	font: bold; 是否粗体显示
	border-image:""; 用来设定边框的背景图片。
	border-radius:5px; 用来设定边框的弧度。可以设定圆角的按钮
	border-width: 1px； 边框大小
	font-family:""; 来设定字体所属家族，
	font-size:20px; 来设定字体大小
	font-style:""; 来设定字体样式
	font-weight:20px; 来设定字体深浅
	 background-color: green; 设置背景颜色
	background:transparent; 设置背景为透明
	color:rgb(241, 70, 62); 设置前景颜色
	selection-color:rgb(241, 70, 62); 用来设定选中时候的颜色

	可以使用border-top，border-right，border-bottom，border-left分别设定按钮的上下左右边框，
	同样有border-left-color, border-left-style, border-left-width.等分别来设定他们的颜色，样式和宽度 
	
	label3->setAlignment(Qt::AlignRight); //设置文字对齐方式
		1）Qt::AlignLeft:：水平方向靠左。

        2）Qt::AlignRight：水平方向靠右。

        3）Qt::AlignHCenter：水平方向居中。

        4）Qt::AlignJustify：水平方向调整间距两端对齐。

        5）Qt::AlignTop：垂直方向靠上。

        6）Qt::AlignButton：垂直方向靠下。

        7）Qt::AlignVCenter：垂直方向居中。

        8）Qt::AlignCenter：等价于 Qt::AlignHCenter | Qt::AlignVCenter。
        
添加动态图
	QMovie *movie = new QMovie(":/new/3");
    movie->setScaledSize(QSize(ui->label->width(),ui->label->height()));
    ui->label->setMovie(movie);
    movie->start();
    
    
    
    
